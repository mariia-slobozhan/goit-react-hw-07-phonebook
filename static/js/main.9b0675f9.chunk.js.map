{"version":3,"sources":["Components/PhonebookForm/PhonebookForm.module.css","Components/ContactItem/ContactItem.module.css","Components/Filter/Filter.module.css","redux/contacts/contactsSlice.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","Components/PhonebookForm/PhonebookForm.js","redux/contacts/contacts-selectors.js","Components/ContactItem/ContactItem.js","Components/ContactsList/ContactsList.js","Components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getContacts","query","providesTags","addContact","mutation","newContact","url","method","body","invalidatesTags","deleteContact","contactId","useGetContactsQuery","useAddContactMutation","useDeleteContactMutation","changeFilter","createAction","filter","createReducer","_","payload","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","setupListeners","dispatch","PhonebookForm","useState","name","setName","phone","setPhone","data","isLoading","handleChange","e","target","value","resetForm","onSubmit","preventDefault","normalizedContact","toLowerCase","some","item","toast","error","success","className","s","label","input","type","pattern","title","required","onChange","disabled","button","filterValue","state","ContactItem","contact","isDeleting","id","tel","onClick","ContactList","contacts","setContacts","useSelector","useEffect","normalizedFilter","includes","map","Filter","useDispatch","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b0675f9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"PhonebookForm_label__3U3R5\",\"input\":\"PhonebookForm_input__2dnQi\",\"button\":\"PhonebookForm_button__PgsGL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__3cRiV\",\"name\":\"ContactItem_name__11JdY\",\"tel\":\"ContactItem_tel__20zKS\",\"button\":\"ContactItem_button___CVa9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3Ytmd\",\"input\":\"Filter_input__3Lzmv\"};","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nexport const contactsApi = createApi({\n  reducerPath: \"contactsApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://61981ad0164fa60017c22f69.mockapi.io/api/v1\",\n  }),\n  tagTypes: [\"Contacts\"],\n  endpoints: (builder) => ({\n    getContacts: builder.query({\n      query: () => \"/contacts\",\n      providesTags: [\"Contacts\"],\n    }),\n    addContact: builder.mutation({\n      query: (newContact) => ({\n        url: \"/contacts\",\n        method: \"POST\",\n        body: newContact,\n      }),\n      invalidatesTags: [\"Contacts\"],\n    }),\n    deleteContact: builder.mutation({\n      query: (contactId) => ({\n        url: `/contacts/${contactId}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"Contacts\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetContactsQuery,\n  useAddContactMutation,\n  useDeleteContactMutation,\n} = contactsApi;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { changeFilter } from \"./contacts-actions\";\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  filter,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\nimport { contactsApi } from \"./contacts/contactsSlice\";\nimport filter from \"./contacts/contacts-reducer\";\n\nconst store = configureStore({\n  reducer: {\n    [contactsApi.reducerPath]: contactsApi.reducer,\n    filterValue: filter,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(contactsApi.middleware),\n});\n\nsetupListeners(store.dispatch);\n\nexport default store;\n","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { toast } from \"react-toastify\";\nimport s from \"./PhonebookForm.module.css\";\nimport {\n  useGetContactsQuery,\n  useAddContactMutation,\n} from \"redux/contacts/contactsSlice\";\n\nexport default function PhonebookForm() {\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n\n  const { data } = useGetContactsQuery();\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"phone\":\n        setPhone(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const normalizedContact = name.toLowerCase();\n    if (data.some((item) => item.name.toLowerCase() === normalizedContact)) {\n      toast.error(`${name} is already in contact list`);\n      return;\n    }\n    addContact({ name, phone });\n    toast.success(`${name} is added to the contact list!`);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName(\"\");\n    setPhone(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n      </label>\n      <label className={s.label}>\n        Phone number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n          value={phone}\n        />\n      </label>\n      <button disabled={isLoading} className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nPhonebookForm.propTypes = {\n  addContact: PropTypes.func,\n};\n","export const filterValue = (state) => state.filterValue.filter;\n","import React from \"react\";\nimport { useDeleteContactMutation } from \"redux/contacts/contactsSlice\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactItem.module.css\";\n\nexport default function ContactItem({ contact }) {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  return (\n    <li className={s.item} id={contact.id}>\n      <span className={s.name}>{contact.name}</span>\n      <span className={s.tel}>{contact.phone}</span>\n      <button\n        className={s.button}\n        onClick={() => deleteContact(contact.id)}\n        type=\"button\"\n      >\n        {isDeleting ? \"Deleting...\" : \"Delete\"}\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  contact: PropTypes.object,\n  deleteContact: PropTypes.func,\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { filterValue } from \"redux/contacts/contacts-selectors\";\nimport { useGetContactsQuery } from \"redux/contacts/contactsSlice\";\nimport ContactItem from \"../ContactItem/ContactItem\";\n\nexport default function ContactList() {\n  const [contacts, setContacts] = useState([]);\n  const { data, error, isLoading } = useGetContactsQuery();\n  const value = useSelector(filterValue);\n\n  useEffect(() => {\n    const normalizedFilter = value.toLowerCase();\n    try {\n      setContacts(\n        data.filter(({ name }) => name.toLowerCase().includes(normalizedFilter))\n      );\n    } catch (error) {\n      return error;\n    }\n  }, [data, value]);\n\n  return (\n    <ul>\n      {contacts.map((item) => (\n        <ContactItem key={item.id} contact={item} />\n      ))}\n\n      {error && <h2>There are not any contacts in your Phonebook</h2>}\n      {isLoading && <h2>Loading...</h2>}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  value: PropTypes.string,\n  useGetContactsQuery: PropTypes.func,\n};\n","import PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { filterValue } from \"redux/contacts/contacts-selectors\";\nimport { changeFilter } from \"redux/contacts/contacts-actions\";\nimport s from \"./Filter.module.css\";\n\nexport default function Filter() {\n  const value = useSelector(filterValue);\n  const dispatch = useDispatch();\n  const onChange = (e) => dispatch(changeFilter(e.target.value));\n\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import \"./App.css\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"../node_modules/react-toastify/dist/ReactToastify.css\";\nimport PhonebookForm from \"./Components/PhonebookForm/PhonebookForm\";\nimport ContactList from \"./Components/ContactsList/ContactsList\";\nimport Filter from \"./Components/Filter/Filter\";\n\nexport default function App() {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ToastContainer />\n      <PhonebookForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}